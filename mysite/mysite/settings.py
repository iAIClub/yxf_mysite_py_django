# -*- coding: utf-8 -*-
"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.11.15.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
import ConfigParser

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# [Django默认根路径为manage.py所在的路径]
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# [解析外部纯文本配置文件，放置敏感信息和多变的信息]
cf = ConfigParser.ConfigParser()
cf.read("settings.cfg")

# [Debug]
DEBUG = cf.getboolean("meta", "debug")

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
# [配置数据库]
DATABASES = {
    'default': {
        'ENGINE': cf.get("db", "engine"),
        'NAME': cf.get("db", "name"),
        'USER': cf.get("db", "user"),
        'PASSWORD': cf.get("db", "password"),
        'HOST': cf.get("db", "host"),
        'PORT': cf.get("db", "port"),
    }
}

# [记录日志]
if cf.getboolean("meta","logger") is True:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'file': {
                'level': 'ERROR',
                'class': 'logging.FileHandler',
                'filename': os.path.join(os.path.join(BASE_DIR, 'log'),'django.log'),
            },
        },
        'loggers': {
            'django': {
                'handlers': ['file'],
                'level': 'ERROR',
                'propagate': True,
            },
        },
    }
else:
    pass

# # [proxy]
# PROXY = {
#     'URL':cf.get('proxy','url'),
#     'IP':cf.get('proxy','ip'),
#     'PORT':cf.get('proxy','port'),
#     'PASSWORD':cf.get('proxy','password'),
#     'ENCRYPTION':cf.get('proxy','encryption'),
# }

# [baidumap]
BAIDUMAP = {
    'AK':cf.get('baidumap','ak'),
}

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ugre0j(jzu16=93yklv#9-0)96q)gsp*ugygc@(b&u!vv96#gg'


# [允许所有IP访问]
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # [注册项目APP]
    'app_tutorial',
    'app_user',
    'app_blog',
    'app_webtrans',
    'app_visual',
    'app_metaphysics',
    'app_spider',
]

# [中间件必须按照请求-响应的路径顺序，不可打乱]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',#安全
    'django.contrib.sessions.middleware.SessionMiddleware',#会话
    'django.middleware.common.CommonMiddleware',#阻挡非法UA；url补全
    'django.middleware.csrf.CsrfViewMiddleware',#CSRF防火墙
    'django.contrib.auth.middleware.AuthenticationMiddleware',#用户认证
    'django.contrib.messages.middleware.MessageMiddleware',#表单处理信息反馈
    'django.middleware.clickjacking.XFrameOptionsMiddleware',#clickjacking防火墙
]

# [加入URL路由规则]
ROOT_URLCONF = 'mysite.urls'

# [模板配置]
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # [使用唯一的统一路径]
        'DIRS': [os.path.join(BASE_DIR, 'templetes')],
        #'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

#LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True # use internationalization

USE_L10N = False # don't use localization

USE_TZ = False # don't use system timezone


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# upload folder
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
